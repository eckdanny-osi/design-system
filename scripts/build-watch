#!/usr/bin/env node

const path = require('path');
const argv = require('yargs').argv;
const gulp = require('gulp');
const through = require('through2');
const babel = require('gulp-babel');
const sass = require('gulp-sass');
const sourceMaps = require('gulp-sourcemaps');
const tildeImporter = require('node-sass-tilde-importer');

// Parse args

const SCSS_GLOB = argv.scss || './src/**/*.scss';
const JS_GLOB = argv.js || [
  './src/**/*.{js,jsx}',
  '!./src/**/*.{stories,test}.js',
];
// const BASE = argv.base || 'src';
const BASE = argv.base;
const OUT_DIR = argv['out-dir'] || './dist';

// Simple logger

const cwd = process.cwd();
const getRelative = fh => path.relative(cwd, fh);
const log = srcFile =>
  through.obj((file, enc, cb) => {
    if (!/\.map$/.test(file.path)) {
      console.log(`${getRelative(srcFile.path)} -> ${getRelative(file.path)}`);
    }
    return cb(null, file);
  });

// Fallthru Task

// Register watchers

gulp.watch(SCSS_GLOB).on('change', file => {
  // if (/.+\.module\.scss$/.test(path.basename(file.path))) {
  //   console.log('I AM A SASS MODULE');
  // }
  if (/^_.+\.scss$/.test(path.basename(file.path))) {
    console.log('Partial Detected!');
    return void 0;
  }
  gulp
    .src(file.path, { base: BASE })
    .pipe(sourceMaps.init())
    .pipe(sass({ importer: tildeImporter }))
    .pipe(sourceMaps.write('./'))
    .pipe(gulp.dest(OUT_DIR))
    .pipe(log(file));
});

gulp.watch(JS_GLOB).on('change', file => {
  gulp
    .src(file.path, { base: BASE })
    .pipe(babel())
    .pipe(gulp.dest(OUT_DIR))
    .pipe(log(file));
});
